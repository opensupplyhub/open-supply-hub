#!/bin/bash

set -e

function usage() {
    echo -e \
	"Usage: $(basename "$0")" \
    "\nThis script runs a linting check, tests, and also generates" \
    "the unittest code coverage report for the Django app. The" \
    "script performs the same code quality checks for the backend" \
    "as those conducted during the CI pipeline, excluding code" \
    "coverage comparison."
}

if [ "${BASH_SOURCE[0]}" = "${0}" ]; then
    if [ "${1:-}" = "--help" ]; then
        usage
    else
        # Build Django image.
        echo "Run docker-compose build"
        docker-compose build

        # Run the Flake8 linter check.
        echo -e \
        "\nRun docker-compose run --rm --no-deps --entrypoint flake8 django" \
        "--exclude settings.py,manage.py,*.pyc,api/migrations/*"
        docker-compose \
            run --rm --no-deps --entrypoint flake8 django \
            --exclude settings.py,manage.py,*.pyc,api/migrations/*

        # Run the unittest tests and generate code cov report.
        echo -e \
        "\nRun docker-compose" \
        "run --rm --entrypoint /bin/sh django" \
        "-c 'coverage run --data-file=./coverage/.coverage manage.py test --no-input ./api/tests ./countries/tests" \
        "&& coverage lcov --data-file=./coverage/.coverage -o ./coverage/coverage.lcov'" \
        "--omit='./api/migrations/*,./api/tests/*,./countries/tests/*'"
        docker-compose \
            run --rm --entrypoint /bin/sh django \
            -c "coverage run --data-file=./coverage/.coverage manage.py test --no-input ./api/tests ./countries/tests \
            && coverage lcov --data-file=./coverage/.coverage -o ./coverage/coverage.lcov \
            --omit='./api/migrations/*,./api/tests/*,./countries/tests/*'"
    fi
fi