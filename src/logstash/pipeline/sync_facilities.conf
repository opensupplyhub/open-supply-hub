input{
  jdbc{
    jdbc_connection_string => "jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"
    jdbc_user => "${POSTGRES_USER}"
    jdbc_password => "${POSTGRES_PASSWORD}"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_paging_enabled => true
    use_column_value => true
    tracking_column => "updated_at"
    tracking_column_type => "timestamp"
    schedule => "*/15 * * * *"
    statement_filepath => "/usr/share/logstash/sql/sync_facilities.sql"
  }
}
filter {
  json {
    source => "parent_company_value"
    target => "parent_company_value"
  }
  json {
    source => "product_type_value"
    target => "product_type_value"
  }
  json {
    source => "facility_type_value"
    target => "facility_type_value"
  }
  json {
    source => "processing_type_value"
    target => "processing_type_value"
  }
  json {
    source => "number_of_workers_value"
    target => "number_of_workers_value"
  }
  ruby {
    path => "/usr/share/logstash/scripts/facilities/name_local.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/facilities/description.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/facilities/url.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/facilities/sector.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/facilities/parent_company.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/facilities/product_type.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/facilities/facility_type.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/facilities/processing_type.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/facilities/number_of_workers.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/facilities/location.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/facilities/minimum_order_quantity.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/facilities/average_lead_time.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/facilities/percent_female_workers.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/facilities/affiliations.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/facilities/certifications_standards_regulations.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/facilities/country.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/facilities/claim_status.rb"
  }
  mutate {
    copy => { "os_id" => "[@metadata][_id]" }
    remove_field => [
      "@version", 
      "@timestamp",
      "name_local_value",
      "description_value",
      "url_value",
      "sector_value",
      "parent_company_value",
      "product_type_value",
      "facility_type_value",
      "processing_type_value",
      "number_of_workers_value",
      "longitude",
      "latitude",
      "minimum_order_quantity_value",
      "average_lead_time_value",
      "percent_female_workers_value",
      "affiliations_value",
      "certifications_standards_regulations_value",
      "country_value",
      "claim_status_value",
      "updated_at"
    ]
  }
}
output {
  opensearch {
    hosts => ["${OPENSEARCH_ENDPOINT}"]
    auth_type => {
      type => "aws_iam"
      region => "${AWS_REGION}"
    }
    ssl => true
    ssl_certificate_verification => true
    index => "facilities"
    document_id => "%{[@metadata][_id]}"
    template_name => "facilities_template"
    template => "/usr/share/logstash/indexes/facilities.json"
  }
  # For local environment uncomment this block of code and comment out the one above.
  # opensearch {
  #     hosts => ["${OPENSEARCH_ENDPOINT}"]
  #     index => "facilities"
  #     document_id => "%{[@metadata][_id]}"
  #     template_name => "facilities_template"
  #     template => "/usr/share/logstash/indexes/facilities.json"
  #   }
}
