input{
  jdbc{
    jdbc_connection_string => "jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"
    jdbc_user => "${POSTGRES_USER}"
    jdbc_password => "${POSTGRES_PASSWORD}"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_paging_enabled => true
    use_column_value => true
    tracking_column => "updated_at"
    tracking_column_type => "timestamp"
    last_run_metadata_path => "/usr/share/logstash/data/plugins/inputs/jdbc/moderation_events_jdbc_last_run"
    schedule => "*/${MODERATION_EVENTS_PIPELINE_UPDATE_INTERVAL_MINUTES} * * * *"
    statement_filepath => "/usr/share/logstash/sql/sync_moderation_events.sql"
  }
}
filter {
  json {
    source => "cleaned_data_value"
    target => "cleaned_data_value"
  }
  ruby {
    path => "/usr/share/logstash/scripts/moderation_events/country.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/moderation_events/os_id.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/moderation_events/claim_id.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/moderation_events/source.rb"
  }
  ruby {
    path => "/usr/share/logstash/scripts/moderation_events/status_change_date.rb"
  }
  mutate {
    copy => { "moderation_id" => "[@metadata][_id]" }
    remove_field => [
      "@version",
      "@timestamp",
      "cleaned_data_value",
      "os_id_value",
      "claim_id_value",
      "source_value",
      "status_change_date_value"
    ]
  }
}
output {
  opensearch {
    hosts => ["${OPENSEARCH_HOST}:${OPENSEARCH_PORT}"]
    auth_type => {
      type => "${OPENSEARCH_AUTH_TYPE}"
      region => "${AWS_REGION}"
    }
    ssl => "${OPENSEARCH_SSL}"
    ssl_certificate_verification => "${OPENSEARCH_SSL_CERT_VERIFICATION}"
    index => "moderation-events"
    document_id => "%{[@metadata][_id]}"
    template_name => "moderation_events_template"
    template => "/usr/share/logstash/indexes/moderation_events.json"
    legacy_template => false
  }
}
