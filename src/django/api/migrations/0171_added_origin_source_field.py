# Generated by Django 3.2.17 on 2025-06-02 12:00

from django.db import connection, migrations, models
from django.db.migrations import RunPython
from api.migrations._migration_helper import MigrationHelper
from api.constants import OriginSource

helper = MigrationHelper(connection)

HELP_TEXT = "The environment value where instance running"


def update_indexing_functions(apps, schema_editor):
    '''
    This function replaces the old index_facilities and
    index_facilities_by functions with similar ones that
    index origin_source field.
    '''

    helper.run_sql_files([
        '0171_index_facilities.sql',
        '0171_index_facilities_by.sql'
        ])


def revert_updating_indexing_functions(apps, schema_editor):
    '''
    This function reverts the changes made by update_indexing_functions
    by running the SQL files for the previous version of indexing functions.
    '''
    helper.run_sql_files([
        '0140_index_facilities.sql',
        '0140_index_facilities_by.sql'
        ])


def introduce_sql_triggers(apps, schema_editor):
    """
    Introduce SQL triggers for origin_source field.
    """
    helper.run_sql_files(['0171_create_origin_source_triggers.sql'])


def revert_sql_triggers(apps, schema_editor):
    helper.run_sql_files(['0171_revert_origin_source_triggers.sql'])


def create_origin_source_function(apps, schema_editor):
    '''
    This function create the set_origin_source function
    to used by the triggers.
    '''

    helper.run_sql_files(['0171_set_origin_source.sql'])


def revert_origin_source_function(apps, schema_editor):
    helper.run_sql_files(['0171_revert_origin_source_func.sql'])


def drop_triggers(apps, schema_editor):
    helper.run_sql_files(['0170_drop_table_triggers.sql'])


def create_triggers(apps, schema_editor):
    helper.run_sql_files(['0170_create_table_triggers.sql'])


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0170_add_uuid_to_relevant_tables'),
    ]

    operations = [
        # Drops triggers.
        migrations.RunPython(
            code=drop_triggers,
            reverse_code=create_triggers,
        ),

        # Adds origin_source fields to relevant models.
        migrations.AddField(
            model_name='contributor',
            name='origin_source',
            field=models.CharField(
                choices=OriginSource.CHOICES,
                blank=True,
                null=True,
                max_length=200,
                help_text=HELP_TEXT
            ),
        ),
        migrations.RunSQL(
            sql="""
                UPDATE api_contributor
                SET origin_source = 'os_hub'
                WHERE origin_source IS NULL OR origin_source = '';
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        migrations.AddField(
            model_name='extendedfield',
            name='origin_source',
            field=models.CharField(
                choices=OriginSource.CHOICES,
                blank=True,
                null=True,
                max_length=200,
                help_text=HELP_TEXT
            ),
        ),
        migrations.RunSQL(
            sql="""
                UPDATE api_extendedfield
                SET origin_source = 'os_hub'
                WHERE origin_source IS NULL OR origin_source = '';
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        migrations.AddField(
            model_name='facility',
            name='origin_source',
            field=models.CharField(
                choices=OriginSource.CHOICES,
                blank=True,
                null=True,
                max_length=200,
                help_text=HELP_TEXT
            ),
        ),
        migrations.RunSQL(
            sql="""
                UPDATE api_facility
                SET origin_source = 'os_hub'
                WHERE origin_source IS NULL OR origin_source = '';
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        migrations.AddField(
            model_name='facilityactivityreport',
            name='origin_source',
            field=models.CharField(
                choices=OriginSource.CHOICES,
                blank=True,
                null=True,
                max_length=200,
                help_text=HELP_TEXT
            ),
        ),
        migrations.RunSQL(
            sql="""
                UPDATE api_facilityactivityreport
                SET origin_source = 'os_hub'
                WHERE origin_source IS NULL OR origin_source = '';
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        migrations.AddField(
            model_name='facilityalias',
            name='origin_source',
            field=models.CharField(
                choices=OriginSource.CHOICES,
                blank=True,
                null=True,
                max_length=200,
                help_text=HELP_TEXT
            ),
        ),
        migrations.RunSQL(
            sql="""
                UPDATE api_facilityalias
                SET origin_source = 'os_hub'
                WHERE origin_source IS NULL OR origin_source = '';
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        migrations.AddField(
            model_name='facilityclaim',
            name='origin_source',
            field=models.CharField(
                choices=OriginSource.CHOICES,
                blank=True,
                null=True,
                max_length=200,
                help_text=HELP_TEXT
            ),
        ),
        migrations.RunSQL(
            sql="""
                UPDATE api_facilityclaim
                SET origin_source = 'os_hub'
                WHERE origin_source IS NULL OR origin_source = '';
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        migrations.AddField(
            model_name='facilitylist',
            name='origin_source',
            field=models.CharField(
                choices=OriginSource.CHOICES,
                blank=True,
                null=True,
                max_length=200,
                help_text=HELP_TEXT
            ),
        ),
        migrations.RunSQL(
            sql="""
                UPDATE api_facilitylist
                SET origin_source = 'os_hub'
                WHERE origin_source IS NULL OR origin_source = '';
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        migrations.AddField(
            model_name='facilitylistitem',
            name='origin_source',
            field=models.CharField(
                choices=OriginSource.CHOICES,
                blank=True,
                null=True,
                max_length=200,
                help_text=HELP_TEXT
            ),
        ),
        migrations.RunSQL(
            sql="""
                UPDATE api_facilitylistitem
                SET origin_source = 'os_hub'
                WHERE origin_source IS NULL OR origin_source = '';
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        migrations.AddField(
            model_name='facilitymatch',
            name='origin_source',
            field=models.CharField(
                choices=OriginSource.CHOICES,
                blank=True,
                null=True,
                max_length=200,
                help_text=HELP_TEXT
            ),
        ),
        migrations.RunSQL(
            sql="""
                UPDATE api_facilitymatch
                SET origin_source = 'os_hub'
                WHERE origin_source IS NULL OR origin_source = '';
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        migrations.AddField(
            model_name='source',
            name='origin_source',
            field=models.CharField(
                choices=OriginSource.CHOICES,
                blank=True,
                null=True,
                max_length=200,
                help_text=HELP_TEXT
            ),
        ),
        migrations.RunSQL(
            sql="""
                UPDATE api_source
                SET origin_source = 'os_hub'
                WHERE origin_source IS NULL OR origin_source = '';
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        migrations.AddField(
            model_name='facilityindex',
            name='origin_source',
            field=models.CharField(
                choices=OriginSource.CHOICES,
                blank=True,
                null=True,
                max_length=200,
                help_text=HELP_TEXT
            ),
        ),
        migrations.RunSQL(
            sql="""
                UPDATE api_facilityindex
                SET origin_source = 'os_hub'
                WHERE origin_source IS NULL OR origin_source = '';
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        migrations.AddField(
            model_name='facilitylocation',
            name='origin_source',
            field=models.CharField(
                choices=OriginSource.CHOICES,
                blank=True,
                null=True,
                max_length=200,
                help_text=HELP_TEXT
            ),
        ),
        migrations.RunSQL(
            sql="""
                UPDATE api_facilitylocation
                SET origin_source = 'os_hub'
                WHERE origin_source IS NULL OR origin_source = '';
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        migrations.AddField(
            model_name='user',
            name='origin_source',
            field=models.CharField(
                choices=OriginSource.CHOICES,
                blank=True,
                null=True,
                max_length=200,
                help_text=HELP_TEXT
            ),
        ),
        migrations.RunSQL(
            sql="""
                UPDATE api_user
                SET origin_source = 'os_hub'
                WHERE origin_source IS NULL OR origin_source = '';
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),

        # Recreate table triggers.
        migrations.RunPython(
            code=create_triggers,
            reverse_code=drop_triggers,
        ),

        # Update index_facilities sqls.
        RunPython(update_indexing_functions,
                  revert_updating_indexing_functions),

        # Create origin_source update function.
        RunPython(create_origin_source_function,
                  revert_origin_source_function),

        # Create new triggers to update origin_source.
        RunPython(introduce_sql_triggers,
                  revert_sql_triggers)
    ]
